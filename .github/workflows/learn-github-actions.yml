name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  check-bats-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install -g bats
      - run: bats -v

- name: Setup Go environment
  uses: actions/setup-go@v4.0.1
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull node distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional

- name: Run python black code formatter
  # You may pin to the exact commit or the version.
  # uses: DataDog/action-py-black-formatter@bebd29d1572a82c8e4a9de3c42c1592529a7d6af
  uses: DataDog/action-py-black-formatter@v2.5
  with:
    # Black additional input arguments.
    additional_args: # optional, default is 
    # Exit code when black formatting errors are found [true, false]. Defaults to 'true'.

    fail_on_error: # optional, default is true
    # Main branch of the repository to speed up incremental diff

    main_branch: # optional, default is main
    # (--quiet) Don't emit non-error messages to stderr. Errors are still emitted; silence 
  those with 2>/dev/null

    quiet_mode: # optional, default is false
    # (--diff) Don't write the files back, just output a diff for each file on stdout.

    print_diff_mode: # optional, default is false
    # (--check) Don't write the files back, just return the status. Return code 0 means nothing 
  would change. Return code 1 means some files would be reformatted. Return code 123 means
  there was an internal error.

    check_mode: # optional, default is false
    # Turn on if you only want to check changed files instead of all files.

    only_changed_files: # optional, default is false
    # Sha of the commit to compare files to.

    base_commit: # optional, default is 
